services:
  api:
    build:
      context: .
      dockerfile: Dockerfile_api
    ports:
      - "8000:8000" # Map host port 8000 to container port 8000
    volumes:
      - .:/app  # Mount current directory to /app in container for live code changes
    environment:
      # Add any API-specific environment variables here if needed in the future
      # e.g., DATABASE_URL if you switch from SQLite
      PYTHONUNBUFFERED: 1 # Ensures print statements and logs are sent straight to the console

  bot:
    build:
      context: .
      dockerfile: Dockerfile.bot # Assuming your original Dockerfile is for the bot
    environment:
      LEADERBOARDBOT_TOKEN: ${LEADERBOARDBOT_TOKEN} # Get token from .env file or host environment
      API_BASE_URL: http://api:8000 # Bot will connect to the api service on port 8000
      PYTHONUNBUFFERED: 1
    depends_on:
      - api # Ensures the API starts before the bot attempts to connect
    volumes:
      - .:/app # Mount current directory to /app in container for live code changes

# You can define networks here if needed, but the default bridge network usually works for this setup.
